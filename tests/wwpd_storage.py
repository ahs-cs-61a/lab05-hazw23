wwpd_storage = [[1, 'class Student:\n\n    extension_days = 3 # this is a class variable\n\n    def __init__(self, name, staff):\n        self.name = name # this is an instance variable\n        self.understanding = 0\n        staff.add_student(self)\n        print("Added", self.name)\n\n    def visit_office_hours(self, staff):\n        staff.assist(self)\n        print("Thanks, " + staff.name)\n\nclass Professor:\n\n    def __init__(self, name):\n        self.name = name\n        self.students = {}\n\n    def add_student(self, student):\n        self.students[student.name] = student\n\n    def assist(self, student):\n        student.understanding += 1\n\n    def grant_more_extension_days(self, student, days):\n        student.extension_days = days\n\n>>> callahan = Professor("Callahan")', '>>> elle = Student("Elle", callahan)', 'Added Elle', True], [2, '', '>>> elle.visit_office_hours(callahan)', 'Thanks, Callahan', True], [3, '', '>>> elle.visit_office_hours(Professor("Paulette"))', 'Thanks, Paulette', True], [4, '', '>>> elle.understanding', '2', True], [5, '', '>>> [name for name in callahan.students]', "['Elle']", True], [6, '', 'x = Student("Vivian", Professor("Stromwell")).name', 'Added Vivian', True], [7, '', '>>> x', "'Vivian'", True], [8, '', '>>> elle.extension_days', '3', True], [9, '>>> callahan.grant_more_extension_days(elle, 7)', '>>> elle.extension_days', '7', True], [10, '', '>>> Student.extension_days', '3', True], [11, "\nclass Car:\n    num_wheels = 4\n    gas = 30\n    headlights = 2\n    size = 'Tiny'\n\n    def __init__(self, make, model):\n        self.make = make\n        self.model = model\n        self.color = 'No color yet. You need to paint me.'\n        self.wheels = Car.num_wheels\n        self.gas = Car.gas\n\n    def paint(self, color):\n        self.color = color\n        return self.make + ' ' + self.model + ' is now ' + color\n\n    def drive(self):\n        if self.wheels < Car.num_wheels or self.gas <= 0:\n            return 'Cannot drive!'\n        self.gas -= 10\n        return self.make + ' ' + self.model + ' goes vroom!'\n\n    def pop_tire(self):\n        if self.wheels > 0:\n            self.wheels -= 1\n\n    def fill_gas(self):\n        self.gas += 20\n        return 'Gas level: ' + str(self.gas)\n\n>>> deneros_car = Car('Tesla', 'Model S')", '>>> deneros_car.model', "'Model S'", True], [12, '>>> deneros_car.gas = 10', '>>> deneros_car.drive()', "'Tesla Model S goes vroom!'", True], [13, '', '>>> deneros_car.drive()', "'Cannot drive!'", True], [14, '', '>>> deneros_car.fill_gas()', "'Gas level: 20'", True], [15, '', '>>> Car.gas', '30', True], [16, ">>> deneros_car = Car('Tesla', 'Model S')\n>>> deneros_car.wheels = 2", '>>> deneros_car.wheels', '2', True], [17, '', '>>> Car.num_wheels', '4', True], [18, '', '>>> deneros_car.drive()', "'Cannot drive!'", True], [19, '', '>>> Car.drive()', 'error', True], [20, '', '>>> Car.drive(deneros_car)', "'Cannot drive!'", True]]